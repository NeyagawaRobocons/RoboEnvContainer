// generated from rosidl_adapter/resource/action.idl.em
// with input from mecha_control/action/DaizaCmd.action
// generated code does not contain a copyright notice


module mecha_control {
  module action {
    module DaizaCmd_Goal_Constants {
      const uint8 STOP = 0;
      const uint8 READY = 1;
      const uint8 EXPAND = 2;
      const uint8 CONTRACT = 3;
      const uint8 CLAMP = 4;
      const uint8 UNCLAMP = 5;
      const uint8 EXPAND_AND_UNCLAMP = 6;
      const uint8 CLAMP_AND_CONTRACT = 7;
      const uint8 EXPAND_AND_PLACE = 8;
      const uint8 EXPAND_AND_PLACE_AND_CONTRACT = 9;
    };
    @verbatim (language="comment", text=
      "goal constants")
    struct DaizaCmd_Goal {
      @verbatim (language="comment", text=
        "goal fields")
      uint8 command;
    };
    module DaizaCmd_Result_Constants {
      const uint8 OK = 0;
      const uint8 ABORTED = 1;
      const uint8 ERR_UNEXPECTED_ARG = 2;
      const uint8 ERR_CANNOT_PROCESS = 3;
    };
    @verbatim (language="comment", text=
      "result constants")
    struct DaizaCmd_Result {
      @verbatim (language="comment", text=
        "result fields")
      uint8 result;
    };
    module DaizaCmd_Feedback_Constants {
      const uint8 STOPPING = 0;
      const uint8 PREV_ACTION_ABORTED = 1;
      const uint8 EXPANDED_AT_EXPAND_AND_UNCLAMP = 2;
      const uint8 CLAMPED_AT_CLAMP_AND_CONTRACT = 3;
      const uint8 EXPANDED_AT_EXPAND_AND_PLACE = 4;
      const uint8 EXPANDED_AT_EXPAND_AND_PLACE_AND_CONTRACT = 5;
      const uint8 CLAMPED_AT_EXPAND_AND_PLACE_AND_CONTRACT = 6;
    };
    @verbatim (language="comment", text=
      "feedback constants")
    struct DaizaCmd_Feedback {
      @verbatim (language="comment", text=
        "feedback fields")
      uint8 feedback;
    };
  };
};
