// generated from rosidl_adapter/resource/action.idl.em
// with input from mecha_control/action/HinaCmd.action
// generated code does not contain a copyright notice


module mecha_control {
  module action {
    module HinaCmd_Goal_Constants {
      const uint8 STOP = 0;
      const uint8 READY = 1;
      const uint8 UP = 2;
      const uint8 DOWN = 3;
      const uint8 POS_CARRY = 4;
      const uint8 POS_TAKE = 5;
      const uint8 POS_PLACE = 6;
      const uint8 GUIDE_EXPAND = 7;
      const uint8 GUIDE_CONTRACT = 8;
      const uint8 LATCH_UNLOCK = 9;
      const uint8 LATCH_UNLOCK_1 = 10;
      const uint8 LATCH_UNLOCK_2 = 11;
      const uint8 DOWN_AND_TAKE = 12;
      const uint8 UP_AND_CARRY = 13;
      const uint8 UP_AND_PLACE = 14;
    };
    @verbatim (language="comment", text=
      "goal constants")
    struct HinaCmd_Goal {
      @verbatim (language="comment", text=
        "goal fields")
      uint8 command;
    };
    module HinaCmd_Result_Constants {
      const uint8 OK = 0;
      const uint8 ABORTED = 1;
      const uint8 ERR_UNEXPECTED_ARG = 2;
      const uint8 ERR_CANNOT_PROCESS = 3;
    };
    @verbatim (language="comment", text=
      "result constants")
    struct HinaCmd_Result {
      @verbatim (language="comment", text=
        "result fields")
      uint8 result;
    };
    module HinaCmd_Feedback_Constants {
      const uint8 STOPPING = 0;
      const uint8 PREV_ACTION_ABORTED = 1;
      const uint8 DOWN_AT_DOWN_AND_TAKE = 2;
      const uint8 UP_AT_UP_AND_PLACE = 3;
    };
    @verbatim (language="comment", text=
      "feedback constants")
    struct HinaCmd_Feedback {
      @verbatim (language="comment", text=
        "feedback fields")
      uint8 feedback;
    };
  };
};
