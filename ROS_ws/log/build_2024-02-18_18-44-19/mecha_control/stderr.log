[33mCMake Warning at CMakeLists.txt:34 (add_executable):
  Cannot generate a safe runtime search path for target cmd_seq because there
  is a cycle in the constraint graph:

    dir 0 is [/opt/ros/humble/lib]
    dir 1 is [/ROS_ws/install/mecha_control/lib]
      dir 2 must precede it due to runtime library [libmecha_control__rosidl_typesupport_introspection_c.so]
    dir 2 is [/ROS_ws/build/mecha_control]
      dir 1 must precede it due to runtime library [libmecha_control__rosidl_typesupport_fastrtps_c.so]

  Some of these libraries may not be found correctly.

[0m
In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
/usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (MechSeqNode::*)(), MechSeqNode*, const std::_Placeholder<1>&>[m[Kâ€™:
[01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (MechSeqNode::*)(), MechSeqNode*, const std::_Placeholder<1>&>[m[Kâ€™
[01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (MechSeqNode::*)(); _BoundArgs = {MechSeqNode*, const std::_Placeholder<1>&}][m[Kâ€™
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:22:41:[m[K   required from here
[01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
  755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
      |                               [01;31m[K~~~~~[m[K
  756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
      |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
      |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))[m[Kâ€™ evaluates to false
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:[m[K In lambda function:
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:55:40:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Ksleep_for(int)[m[Kâ€™
   55 |             [01;31m[Kstd::this_thread::sleep_for(5)[m[K;
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
In file included from [01m[K/usr/include/c++/11/thread:44[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:22[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
[01m[K/usr/include/c++/11/bits/this_thread_sleep.h:70:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Rep, class _Period> void std::this_thread::sleep_for(const std::chrono::duration<_Rep1, _Period1>&)[m[Kâ€™
   70 |       [01;36m[Ksleep_for[m[K(const chrono::duration<_Rep, _Period>& __rtime)
      |       [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/this_thread_sleep.h:70:7:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:55:40:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst std::chrono::duration<_Rep1, _Period1>[m[Kâ€™ and â€˜[01m[Kint[m[Kâ€™
   55 |             [01;36m[Kstd::this_thread::sleep_for(5)[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:[m[K In member function â€˜[01m[Kvoid MechSeqNode::set_bonbori_callback(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >) const[m[Kâ€™:
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:57:10:[m[K [01;31m[Kerror: [m[Kpassing â€˜[01m[Kconst std::thread[m[Kâ€™ as â€˜[01m[Kthis[m[Kâ€™ argument discards qualifiers [[01;31m[K-fpermissive[m[K]
   57 |         }[01;31m[K)[m[K;
      |          [01;31m[K^[m[K
In file included from [01m[K/usr/include/c++/11/future:48[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
[01m[K/usr/include/c++/11/bits/std_thread.h:162:13:[m[K [01;36m[Knote: [m[K  in call to â€˜[01m[Kstd::thread& std::thread::operator=(std::thread&&)[m[Kâ€™
  162 |     thread& [01;36m[Koperator[m[K=(thread&& __t) noexcept
      |             [01;36m[K^~~~~~~~[m[K
/usr/include/c++/11/bits/std_thread.h: In instantiation of â€˜[01m[Kstd::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (MechSeqNode::*)(); _Args = {}; <template-parameter-1-3> = void][m[Kâ€™:
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:18:68:[m[K   required from here
[01m[K/usr/include/c++/11/bits/std_thread.h:130:72:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: std::thread arguments must be invocable after conversion to rvalues
  130 |                                       typename decay<_Args>::type...>::[01;31m[Kvalue[m[K,
      |                                                                        [01;31m[K^~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_thread.h:130:72:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstd::integral_constant<bool, false>::value[m[Kâ€™ evaluates to false
/usr/include/c++/11/bits/std_thread.h: In instantiation of â€˜[01m[Kstruct std::thread::_Invoker<std::tuple<void (MechSeqNode::*)()> >[m[Kâ€™:
[01m[K/usr/include/c++/11/bits/std_thread.h:203:13:[m[K   required from â€˜[01m[Kstruct std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (MechSeqNode::*)()> > >[m[Kâ€™
[01m[K/usr/include/c++/11/bits/std_thread.h:143:29:[m[K   required from â€˜[01m[Kstd::thread::thread(_Callable&&, _Args&& ...) [with _Callable = void (MechSeqNode::*)(); _Args = {}; <template-parameter-1-3> = void][m[Kâ€™
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:18:68:[m[K   required from here
[01m[K/usr/include/c++/11/bits/std_thread.h:252:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::thread::_Invoker<std::tuple<void (MechSeqNode::*)()> >::__result<std::tuple<void (MechSeqNode::*)()> >[m[Kâ€™
  252 |           [01;31m[K_M_invoke[m[K(_Index_tuple<_Ind...>)
      |           [01;31m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_thread.h:256:9:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::thread::_Invoker<std::tuple<void (MechSeqNode::*)()> >::__result<std::tuple<void (MechSeqNode::*)()> >[m[Kâ€™
  256 |         [01;31m[Koperator[m[K()()
      |         [01;31m[K^~~~~~~~[m[K
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:21:81:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void()>::function(std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>&)[m[Kâ€™
  394 |       callback_variant_ = [01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K;
      |                           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/future:47[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {}][m[Kâ€™
  435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/11/bits/move.h:57[m[K,
                 from [01m[K/usr/include/c++/11/bits/stl_pair.h:59[m[K,
                 from [01m[K/usr/include/c++/11/bits/stl_algobase.h:64[m[K,
                 from [01m[K/usr/include/c++/11/memory:63[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
/usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void()>::_Callable<std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>&, std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>, std::__invoke_result<std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>&> >; _Tp = void; _Res = void; _ArgTypes = {}][m[Kâ€™
[01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:21:81:[m[K   required from here
[01m[K/usr/include/c++/11/type_traits:2211:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2211 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/future:47[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = mecha_control::msg::SensorStates_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = mecha_control::msg::SensorStates_<std::allocator<void> >; CallbackT = std::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<mecha_control::msg::SensorStates_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<mecha_control::msg::SensorStates_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/ROS_ws/src/mecha_control/src/cmd_seq.cpp:21:81:[m[K   required from here
[01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {}][m[Kâ€™
  404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>[m[Kâ€™ to â€˜[01m[Kstd::function<void()>&&[m[Kâ€™
  404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
      |                [01;36m[K~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {}][m[Kâ€™
  386 |       [01;36m[Kfunction[m[K(const function& __x)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>[m[Kâ€™ to â€˜[01m[Kconst std::function<void()>&[m[Kâ€™
  386 |       function([01;36m[Kconst function& __x[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {}; std::nullptr_t = std::nullptr_t][m[Kâ€™
  375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (MechSeqNode::*(MechSeqNode*, std::_Placeholder<1>))()>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
  375 |       function([01;36m[Knullptr_t[m[K) noexcept
      |                [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {}][m[Kâ€™
  368 |       [01;36m[Kfunction[m[K() noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
gmake[2]: *** [CMakeFiles/cmd_seq.dir/build.make:76: CMakeFiles/cmd_seq.dir/src/cmd_seq.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:595: CMakeFiles/cmd_seq.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
